<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 24</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA8gYAAAJNU0Z0AUkBTAIBAQIB
        AAEQAQABEAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARD/
        AEcAAYIBbAFGAbwBQQE/ATwBZzgAAYIBbAFGAbwBQQE/ATwBZ7QAAXwBagFHAbcB4gGbARkB/wGAAWwB
        RgG8NAABfAFqAUcBtwHiAZsBGQH/AYABbAFGAbycAAMfASwDGgEkDAABdwFnAUkBsgHiAZsBGQH/AXsB
        aAFHAbYgAAMfASwDGgEkDAABdwFnAUkBsgHiAZsBGQH/AXsBaAFHAbaYAAGgAZgBbQHMAf8B6QF+Av8B
        5gF4Av8B4wFzAv8B4AFtAf8BmgGPAWAByQF9AXABSgG8AeMBtwE5AfoBdwFnAUkBshwAAaABmAFtAcwB
        /wHpAX4C/wHmAXgC/wHjAXMC/wHgAW0B/wGaAY8BYAHJAX0BcAFKAbwB4wG3ATkB+gF3AWcBSQGylAAD
        AgEDAfkB7AGNAf0B/wHvAYkC/wHsAYMC/wHpAX4C/wHmAXgC/wHjAXMC/wHgAW0B/wH9AdoBZQH/AX0B
        cAFKAbwYAAMCAQMB+QHsAY0B/QH/Ae8BiQL/AewBgwL/AekBfgL/AeYBeAL/AeMBcwL/AeABbQH/Af0B
        2gFlAf8BfQFwAUoBvJgAAbkBswF9AdwB/wH1AZEC/wHyAY0C/wHvAYkC/wHsAYMC/wHpAX4C/wHmAXgC
        /wHjAXMC/wHgAW0B/wGaAY8BYAHJGAABuQGzAX0B3AH/AfUBkQL/AfIBjQL/Ae8BiQL/AewBgwL/AekB
        fgL/AeYBeAL/AeMBcwL/AeABbQH/AZoBjwFgAcmUAAMDAQQB/wH5AZkC/wH3AZUC/wH1AZEC/wHyAY0C
        /wHvAYkC/wHsAYMC/wHpAX4C/wHmAXgC/wHjAXMC/wHgAW0B/xQAAwMBBAH/AfkBmQL/AfcBlQL/AfUB
        kQL/AfIBjQL/Ae8BiQL/AewBgwL/AekBfgL/AeYBeAL/AeMBcwL/AeABbQH/lAADEgEYAf8B+wGdAv8B
        +QGZAv8B9wGVAv8B9AGRAv8B8gGNAv8B7wGIAv8B7AGDAv8B6QF+Av8B5gF4Av8B4wFzAf8DGgEkEAAD
        EgEYAf8B+wGdAv8B+QGZAv8B9wGVAv8B9AGRAv8B8gGNAv8B7wGIAv8B7AGDAv8B6QF+Av8B5gF4Av8B
        4wFzAf8DGgEkkAADEgEXAf8B/AGfAv8B+wGdAv8B+QGZAv8B9wGVAv8B9AGRAv8B8gGNAv8B7wGJAv8B
        7AGDAv8B6QF+Av8B5gF4Af8DHwEsEAADEgEXAf8B/AGfAv8B+wGdAv8B+QGZAv8B9wGVAv8B9AGRAv8B
        8gGNAv8B7wGJAv8B7AGDAv8B6QF+Av8B5gF4Af8DHwEskAADAwEEAf8B/QGgAv8B/AGfAv8B+wGdAv8B
        +QGZAv8B9wGVAv8B9AGRAv8B8gGNAv8B7wGJAv8B7AGDAv8B6QF+Af8UAAMDAQQB/wH9AaAC/wH8AZ8C
        /wH7AZ0C/wH5AZkC/wH3AZUC/wH0AZEC/wHyAY0C/wHvAYkC/wHsAYMC/wHpAX4B/5gAApoBdwHJAf8B
        /QGgAv8B/AGfAv8B+wGdAv8B+QGZAv8B9wGVAv8B9QGRAv8B8gGNAv8B7wGJAf8BoAGYAW0BzBgAApoB
        dwHJAf8B/QGgAv8B/AGfAv8B+wGdAv8B+QGZAv8B9wGVAv8B9QGRAv8B8gGNAv8B7wGJAf8BoAGYAW0B
        zJgAAwQBBQH/Af4BogL/Af0BoAL/AfwBnwL/AfsBnQL/AfkBmQL/AfcBlQL/AfUBkQH/AfkB7AGNAf0c
        AAMEAQUB/wH+AaIC/wH9AaAC/wH8AZ8C/wH7AZ0C/wH5AZkC/wH3AZUC/wH1AZEB/wH5AewBjQH9oAAD
        BAEFApoBdwHJAf8B/QGgAv8B/AGfAv8B+wGdAv8B+QGZAf8BtwGzAXwB2wMCAQMgAAMEAQUCmgF3AckB
        /wH9AaAC/wH8AZ8C/wH7AZ0C/wH5AZkB/wG3AbMBfAHbAwIBA6gAAwMBBAMRARYDEgEYAwMBBDAAAwMB
        BAMRARYDEgEYAwMBBP8AnQABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEABP8E
        AAH/AfkB/wH5BAAB/wHxAf8B8QQAAfwB4wH8AeMEAAHwAQcB8AEHBAABwAEPAcABDwQAAcABDwHAAQ8E
        AAGAAQ8BgAEPBAABgAEHAYABBwQAAYABBwGAAQcEAAGAAQ8BgAEPBAABwAEPAcABDwQAAcABHwHAAR8E
        AAHgAR8B4AEfBAAB+AF/AfgBfwQABP8EAAs=
</value>
  </data>
</root>